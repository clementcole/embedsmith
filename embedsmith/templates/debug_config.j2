{
    "project": {
        "name": "${project_name}",
        "version": "${version}",
        "author": "${author}",
        "mcu": "${mcu}",
        "compiler": "${compiler}"
    },
    "debug": {
        "interface": "swd",
        "adapter": "stlink",
        "speed": 4000,
        "protocol": "swd",
        "reset_type": "init",
        "adapter_config": {
            "stlink": {
                "serial": null,
                "version": "v2"
            },
            "jlink": {
                "device": "${mcu}",
                "speed": 4000
            }
        }
    },
    "openocd": {
        "config_files": [
            "interface/stlink-v2.cfg",
            "target/stm32f4x.cfg"
        ],
        "commands": [
            "reset_config srst_only",
            "adapter speed 4000"
        ]
    },
    "gdb": {
        "port": 3333,
        "telnet_port": 4444,
        "tcl_port": 6666,
        "init_commands": [
            "monitor reset halt",
            "monitor flash banks"
        ]
    },
    "flashing": {
        "verify": true,
        "reset_after_flash": true,
        "halt_before_flash": true
    },
    "tools": {
        "gdb": "${compiler}-gdb",
        "gdb_server": "openocd",
        "flasher": "openocd",
        "serial_monitor": {
            "tool": "miniterm",
            "baudrate": 115200,
            "parity": "N",
            "stopbits": 1
        }
    },
    "vscode": {
        "launch": {
            "version": "0.2.0",
            "configurations": [
                {
                    "name": "Cortex Debug",
                    "cwd": "${workspaceRoot}",
                    "executable": "./firmware/build/${project_name}.elf",
                    "request": "launch",
                    "type": "cortex-debug",
                    "servertype": "openocd",
                    "device": "${mcu}",
                    "configFiles": [
                        "interface/stlink-v2.cfg",
                        "target/stm32f4x.cfg"
                    ]
                }
            ]
        }
    }
}